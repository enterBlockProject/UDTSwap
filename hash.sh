#!/bin/sh

arr=(`cat ./hash.txt`)

echo '#define SCRIPT_SIZE 32768
#define INPUT_SIZE 128

#define ADD_LIQUIDITY_MINIMUM 1000
#define LIQUIDITY_POOL_EXCEPT_FEE 0x00000000000003e5
#define STATE_USE_FEE 6100000000
#define UDTSWAP_TYPE_CELL_INDEX 0
#define UDTSWAP_UDT_LOCK_CELL_INDEX_1 1
#define UDTSWAP_UDT_LOCK_CELL_INDEX_2 2
#define UDTSWAP_TYPE_SCRIPT_SIZE 97
#define UDTSWAP_LOCK_SCRIPT_SIZE 117
#define UDTSWAP_LIQUIDITY_UDT_DATA_SIZE 16
#define UDTSWAP_LIQUIDITY_UDT_TYPE_SCRIPT_SIZE 129
#define UDTSWAP_LIQUIDITY_UDT_ARGS_TX_INPUT_START 85
#define SCRIPT_HASH_SIZE 32
#define CODE_HASH_SIZE 32
#define CKB_RESERVE_DEFAULT 30000000000
#define UDT_RESERVE_DEFAULT 1
#define UDT_AMOUNT_SIZE 16
#define UDTSWAP_DATA_SIZE 48
#define UDTSWAP_DATA_UDT1_RESERVE_START 0
#define UDTSWAP_DATA_UDT2_RESERVE_START 16
#define UDTSWAP_DATA_TOTAL_LIQUIDITY_START 32
#define CODE_HASH_START 16
#define ARGS_START 53
#define UDTSWAP_LOCK_ARGS_UDT1_SCRIPT_HASH_START 53
#define UDTSWAP_LOCK_ARGS_UDT2_SCRIPT_HASH_START 85
#define ADD_LIQUIDITY_CELL_INDEX 4
#define REMOVE_LIQUIDITY_CELL_START_INDEX 3
#define TX_INPUT_SIZE 44

#define UDTSWAP_NOT_MATCH_ERROR -70
#define LIQUIDITY_TRANSFER_NOT_CORRECT_ERROR -71
#define ADD_LIQUIDITY_NOT_CORRECT_ERROR -72
#define LIQUIDITY_NOT_CORRECT_ERROR -73
#define REMOVE_LIQUIDITY_NOT_CORRECT_ERROR -74
#define RESERVE_NOT_CORRECT_ERROR -75
#define SWAP_NOT_CORRECT_ERROR -76
#define DIVIDE_ZERO_ERROR -77
#define SUBTRACT_ERROR -78
#define SCRIPT_NOT_MATCH_ERROR -79
#define RESERVE_BELOW_MINIMUM_ERROR -80
#define LIQUIDITY_EMPTY_ERROR -81
#define RESULT_NOT_CORRECT_ERROR -82
#define UDTSWAP_DATA_SIZE_NOT_CORRECT_ERROR -83
#define UDTSWAP_TYPE_SCRIPT_SIZE_NOT_CORRECT_ERROR -84
#define UDTSWAP_LOCK_SCRIPT_SIZE_NOT_CORRECT_ERROR -85
#define UDTSWAP_LIQUIDITY_UDT_DATA_SIZE_NOT_CORRECT_ERROR -86
#define UDTSWAP_LIQUIDITY_UDT_TYPE_SCRIPT_SIZE_NOT_CORRECT_ERROR -87
#define SCRIPT_HASH_SIZE_NOT_CORRECT_ERROR -88
#define CODE_HASH_SIZE_NOT_CORRECT_ERROR -89
#define STATE_USE_FEE_NOT_CORRECT_ERROR -90
#define INPUT_TOO_LONG_ERROR -91
#define INPUT_NOT_MATCH_ERROR -92
#define STATE_USE_FEE_CELL_TYPE_SCRIPT_EXIST_ERROR -93
#define CODE_HASH_NOT_MATCH_ERROR -94
#define NOT_ENOUGH_GROUP_CELL_ERROR -95
#define TOO_MANY_GROUP_CELL_ERROR -96
#define UDTSWAP_UDT_LOCK_CELL_CAPACITY_NOT_CORRECT_ERROR -97
#define UDTSWAP_TYPE_UDTSWAP_UDT_LOCK_AMOUNT_NOT_MATCH_ERROR -98
#define ONLY_TYPE_SCRIPT_NOT_MATCH_ERROR -99
#define TX_INPUT_NOT_MATCH_ERROR -100
#define ADD_LIQUIDITY_TOO_LOW_ERROR -101
#define SAME_UDT_OR_ORDER_ERROR -102
#define CANNOT_UNLOCK_ERROR -105
#define UDTSWAP_LIQUIDITY_UDT_ZERO_AMOUNT_ERROR -106
#define OVERFLOW_ERROR -107
#define UDTSWAP_LIQUIDITY_UDT_INPUT_OUTPUT_NOT_MATCH_ERROR -108
#define UDTSWAP_SYSCALL_ERROR -109

#define UDTSWAP_LIQUIDITY_UDT_ERROR_IDX 50
#define UDTSWAP_LOCK_ERROR_IDX 100

#define ERROR_ENCODING -2
#define INDEX_OUT_OF_BOUND_ERROR 1
#define ITEM_MISSING_ERROR 2

typedef unsigned __int128 uint128_t;

const uint8_t udtswap_type_script_code_hash_buf[CODE_HASH_SIZE] = {'${arr[0]}'}; 
const uint8_t udtswap_lock_code_hash_buf[CODE_HASH_SIZE] = {'${arr[1]}'};
const uint8_t udtswap_liquidity_udt_code_hash_buf[CODE_HASH_SIZE] = {'${arr[2]}'};
const uint8_t fee_lock_hash[SCRIPT_HASH_SIZE] = {226, 95, 206, 237, 187, 115, 204, 92, 253, 92, 45, 123, 9, 230, 209, 27, 63, 57, 251, 188, 95, 116, 36, 162, 221, 246, 233, 126, 185, 23, 95, 137};
const uint8_t udt_type_ckb_script_hash_buf[SCRIPT_HASH_SIZE] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

uint128_t get_uint128_t(int from, uint8_t arr[]) {
  uint128_t ret=0;
  int i=0;
  for (i=0; i<UDT_AMOUNT_SIZE; i++) {
    ret += (uint128_t)arr[from+i] << (8*i);
  }
  return ret;
}' > ./UDTswap_scripts/udtswap_common.h
